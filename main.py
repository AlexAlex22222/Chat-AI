all_symbs = {'A': 1, 'a': 2, 'B': 3, 'b': 4, 'C': 5, 'c': 6, 'D': 7, 'd': 8, 'E': 9, 'e': 10, 'F': 11, 'f': 12, 'G': 13, 'g': 14, 'H': 15, 'h': 16, 'I': 17, 'i': 18, 'J': 19, 'j': 20, 'K': 21, 'k': 22, 'L': 23, 'l': 24, 'M': 25, 'm': 26, 'N': 27, 'n': 28, 'O': 29, 'o': 30, 'P': 31, 'p': 32, 'Q': 33, 'q': 34, 'R': 35, 'r': 36, 'S': 37, 's': 38, 'T': 39, 't': 40, 'U': 41, 'u': 42, 'V': 43, 'v': 44, 'W': 45, 'w': 46, 'X': 47, 'x': 48, 'Y': 49, 'y': 50, 'Z': 51, 'z': 52, 'А': 53, 'а': 54, 'Б': 55, 'б': 56, 'В': 57, 'в': 58, 'Г': 59, 'г': 60, 'Д': 61, 'д': 62, 'Е': 63, 'е': 64, 'Ё': 65, 'ё': 66, 'Ж': 67, 'ж': 68, 'З': 69, 'з': 70, 'И': 71, 'и': 72, 'Й': 73, 'й': 74, 'К': 75, 'к': 76, 'Л': 77, 'л': 78, 'М': 79, 'м': 80, 'Н': 81, 'н': 82, 'О': 83, 'о': 84, 'П': 85, 'п': 86, 'Р': 87, 'р': 88, 'С': 89, 'с': 90, 'Т': 91, 'т': 92, 'У': 93, 'у': 94, 'Ф': 95, 'ф': 96, 'Х': 97, 'х': 98, 'Ц': 99, 'ц': 100, 'Ч': 101, 'ч': 102, 'Ш': 103, 'ш': 104, 'Щ': 105, 'щ': 106, 'Ы': 107, 'ы': 108, 'Ь': 109, 'ь': 110, 'Ъ': 111, 'ъ': 112, 'Э': 113, 'э': 114, 'Ю': 115, 'ю': 116, 'Я': 117, 'я': 118, ':': 119, '-': 120, ',': 121, '.': 122, ';': 123, '?': 124, '!': 125, '(': 126, ')': 127, '"': 128, '0': 129, '1': 130, '2': 131, '3': 132, '4': 133, '5': 134, '6': 135, '7': 136, '8': 137, '9': 138, ' ': 139, "'": 140}


all_symbs_enc = {1: 'A', 2: 'a', 3: 'B', 4: 'b', 5: 'C', 6: 'c', 7: 'D', 8: 'd', 9: 'E', 10: 'e', 11: 'F', 12: 'f', 13: 'G', 14: 'g', 15: 'H', 16: 'h', 17: 'I', 18: 'i', 19: 'J', 20: 'j', 21: 'K', 22: 'k', 23: 'L', 24: 'l', 25: 'M', 26: 'm', 27: 'N', 28: 'n', 29: 'O', 30: 'o', 31: 'P', 32: 'p', 33: 'Q', 34: 'q', 35: 'R', 36: 'r', 37: 'S', 38: 's', 39: 'T', 40: 't', 41: 'U', 42: 'u', 43: 'V', 44: 'v', 45: 'W', 46: 'w', 47: 'X', 48: 'x', 49: 'Y', 50: 'y', 51: 'Z', 52: 'z', 53: 'А', 54: 'а', 55: 'Б', 56: 'б', 57: 'В', 58: 'в', 59: 'Г', 60: 'г', 61: 'Д', 62: 'д', 63: 'Е', 64: 'е', 65: 'Ё', 66: 'ё', 67: 'Ж', 68: 'ж', 69: 'З', 70: 'з', 71: 'И', 72: 'и', 73: 'Й', 74: 'й', 75: 'К', 76: 'к', 77: 'Л', 78: 'л', 79: 'М', 80: 'м', 81: 'Н', 82: 'н', 83: 'О', 84: 'о', 85: 'П', 86: 'п', 87: 'Р', 88: 'р', 89: 'С', 90: 'с', 91: 'Т', 92: 'т', 93: 'У', 94: 'у', 95: 'Ф', 96: 'ф', 97: 'Х', 98: 'х', 99: 'Ц', 100: 'ц', 101: 'Ч', 102: 'ч', 103: 'Ш', 104: 'ш', 105: 'Щ', 106: 'щ', 107: 'Ы', 108: 'ы', 109: 'Ь', 110: 'ь', 111: 'Ъ', 112: 'ъ', 113: 'Э', 114: 'э', 115: 'Ю', 116: 'ю', 117: 'Я', 118: 'я', 119: ':', 120: '-', 121: ',', 122: '.', 123: ';', 124: '?', 125: '!', 126: '(', 127: ')', 128: '"', 129: '0', 130: '1', 131: '2', 132: '3', 133: '4', 134: '5', 135: '6', 136: '7', 137: '8', 138: '9', 139: ' '}

def in_tensor(input_list, all_list):
  max_l = 0
  ts_list = []
  for w in input_list:
    ins_list = []
    for i in w:
        g = all_list[i]
        ins_list.append(g)
    if w == input_list[-1]:
      pass
    else:
      ins_list.append(all_list[" "])
    ts_list.append(ins_list)
  
  for g in ts_list:
    count = len(g)
    if count > max_l:
          max_l = count
    else:
          continue
  for g in ts_list:
    count = len(g)
    if count < max_l:
      while len(g) < max_l:
            g.append('0')
  return ts_list 

input_text = input("E: ").split(" ")
x = in_tensor(input_text, all_symbs)


def encode(input_list, all_list):
  g = ""
  for i in input_list:
    h = ""
    for k in i:
      if k == '0':
        continue
      enc = all_list[k]
      h = h+enc
    g = g+h
  return g

a = encode(x, all_symbs_enc)

print(x)
print(a)      
